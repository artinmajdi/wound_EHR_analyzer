name: Wound EHR Analyzer CI

on:
  push:
    branches: [ "main", "public_repo_sync" ]
  pull_request:
    branches: [ "main", "public_repo_sync" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install -e .
        pip list


    - name: Check for test files
      id: check-tests
      run: |
        if [ -d "tests" ] && [ "$(find tests -name 'test_*.py' | wc -l)" -gt 0 ]; then
          echo "tests_exist=true" >> $GITHUB_OUTPUT
        else
          echo "No test files found. Skipping test step."
          echo "tests_exist=false" >> $GITHUB_OUTPUT
        fi

    - name: Test with pytest
      if: steps.check-tests.outputs.tests_exist == 'true'
      env:
        MPLBACKEND: "Agg"
        STREAMLIT_BROWSER_GATHER_USAGE_STATS: "false"
        STREAMLIT_SERVER_HEADLESS: "true"
      run: |
        # Debugging: Print directory structure and Python path
        echo "Python Path: $PYTHONPATH"
        python -c "import sys; print('\n'.join(sys.path))"
        find . -type d -name "wound_analysis" | sort
        find . -type f -name "__init__.py" | sort

        # Run pytest
        pytest -v

    - name: Validate Streamlit app
      run: |
        python -c "import streamlit; import wound_analysis; from wound_analysis.dashboard import Dashboard; print('Streamlit app validation successful!')"
